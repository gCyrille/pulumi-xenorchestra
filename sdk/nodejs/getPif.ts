// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as xenorchestra from "@pulumi/xenorchestra";
 *
 * const eth0 = xenorchestra.getXoaPif({
 *     device: "eth0",
 *     vlan: -1,
 * });
 * const demo_vm = new xenorchestra.Vm("demo-vm", {networks: [{
 *     networkId: eth0.then(eth0 => eth0.network),
 * }]});
 * ```
 */
/** @deprecated xenorchestra.index/getpif.getPif has been deprecated in favor of xenorchestra.index/getxoapif.getXoaPif */
export function getPif(args: GetPifArgs, opts?: pulumi.InvokeOptions): Promise<GetPifResult> {
    pulumi.log.warn("getPif is deprecated: xenorchestra.index/getpif.getPif has been deprecated in favor of xenorchestra.index/getxoapif.getXoaPif")
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("xenorchestra:index/getPif:getPif", {
        "device": args.device,
        "hostId": args.hostId,
        "vlan": args.vlan,
    }, opts);
}

/**
 * A collection of arguments for invoking getPif.
 */
export interface GetPifArgs {
    /**
     * The name of the network device. Examples include eth0, eth1, etc. See `ifconfig` for possible devices.
     */
    device: string;
    /**
     * The ID of the host that the PIF belongs to.
     */
    hostId?: string;
    /**
     * The VLAN the PIF belongs to.
     */
    vlan: number;
}

/**
 * A collection of values returned by getPif.
 */
export interface GetPifResult {
    /**
     * If the PIF is attached to the network.
     */
    readonly attached: boolean;
    /**
     * The name of the network device. Examples include eth0, eth1, etc. See `ifconfig` for possible devices.
     */
    readonly device: string;
    /**
     * The host the PIF is associated with.
     */
    readonly host: string;
    /**
     * The ID of the host that the PIF belongs to.
     */
    readonly hostId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The network the PIF is associated with.
     */
    readonly network: string;
    /**
     * The pool the PIF is associated with.
     */
    readonly poolId: string;
    /**
     * The uuid of the PIF.
     */
    readonly uuid: string;
    /**
     * The VLAN the PIF belongs to.
     */
    readonly vlan: number;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as xenorchestra from "@pulumi/xenorchestra";
 *
 * const eth0 = xenorchestra.getXoaPif({
 *     device: "eth0",
 *     vlan: -1,
 * });
 * const demo_vm = new xenorchestra.Vm("demo-vm", {networks: [{
 *     networkId: eth0.then(eth0 => eth0.network),
 * }]});
 * ```
 */
/** @deprecated xenorchestra.index/getpif.getPif has been deprecated in favor of xenorchestra.index/getxoapif.getXoaPif */
export function getPifOutput(args: GetPifOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPifResult> {
    pulumi.log.warn("getPif is deprecated: xenorchestra.index/getpif.getPif has been deprecated in favor of xenorchestra.index/getxoapif.getXoaPif")
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("xenorchestra:index/getPif:getPif", {
        "device": args.device,
        "hostId": args.hostId,
        "vlan": args.vlan,
    }, opts);
}

/**
 * A collection of arguments for invoking getPif.
 */
export interface GetPifOutputArgs {
    /**
     * The name of the network device. Examples include eth0, eth1, etc. See `ifconfig` for possible devices.
     */
    device: pulumi.Input<string>;
    /**
     * The ID of the host that the PIF belongs to.
     */
    hostId?: pulumi.Input<string>;
    /**
     * The VLAN the PIF belongs to.
     */
    vlan: pulumi.Input<number>;
}
