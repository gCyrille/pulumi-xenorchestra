// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides information about a Xen Orchestra user. If the Xen Orchestra user account you are using is not an admin, see the `searchInSession` parameter.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as xenorchestra from "@pulumi/xenorchestra";
 *
 * const user = xenorchestra.getXoaUser({
 *     username: "my-username",
 * });
 * ```
 */
/** @deprecated xenorchestra.index/getuser.getUser has been deprecated in favor of xenorchestra.index/getxoauser.getXoaUser */
export function getUser(args: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {
    pulumi.log.warn("getUser is deprecated: xenorchestra.index/getuser.getUser has been deprecated in favor of xenorchestra.index/getxoauser.getXoaUser")
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("xenorchestra:index/getUser:getUser", {
        "searchInSession": args.searchInSession,
        "username": args.username,
    }, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    /**
     * A boolean which will search for the user in the current session (`session.getUser` Xen Orchestra RPC call). This allows a non admin user to look up their own user account.
     */
    searchInSession?: boolean;
    /**
     * The username of the XO user.
     */
    username: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A boolean which will search for the user in the current session (`session.getUser` Xen Orchestra RPC call). This allows a non admin user to look up their own user account.
     */
    readonly searchInSession?: boolean;
    /**
     * The username of the XO user.
     */
    readonly username: string;
}
/**
 * Provides information about a Xen Orchestra user. If the Xen Orchestra user account you are using is not an admin, see the `searchInSession` parameter.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as xenorchestra from "@pulumi/xenorchestra";
 *
 * const user = xenorchestra.getXoaUser({
 *     username: "my-username",
 * });
 * ```
 */
/** @deprecated xenorchestra.index/getuser.getUser has been deprecated in favor of xenorchestra.index/getxoauser.getXoaUser */
export function getUserOutput(args: GetUserOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUserResult> {
    pulumi.log.warn("getUser is deprecated: xenorchestra.index/getuser.getUser has been deprecated in favor of xenorchestra.index/getxoauser.getXoaUser")
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("xenorchestra:index/getUser:getUser", {
        "searchInSession": args.searchInSession,
        "username": args.username,
    }, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    /**
     * A boolean which will search for the user in the current session (`session.getUser` Xen Orchestra RPC call). This allows a non admin user to look up their own user account.
     */
    searchInSession?: pulumi.Input<boolean>;
    /**
     * The username of the XO user.
     */
    username: pulumi.Input<string>;
}
