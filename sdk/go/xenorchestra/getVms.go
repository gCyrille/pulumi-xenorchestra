// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package xenorchestra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/vatesfr/pulumi-xenorchestra/sdk/go/xenorchestra/internal"
)

// Use this data source to filter Xenorchestra VMs by certain criteria (pool_id, powerState or host) for use in other resources.
//
// Deprecated: xenorchestra.index/getvms.getVms has been deprecated in favor of xenorchestra.index/getxoavms.getXoaVms
func GetVms(ctx *pulumi.Context, args *GetVmsArgs, opts ...pulumi.InvokeOption) (*GetVmsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVmsResult
	err := ctx.Invoke("xenorchestra:index/getVms:getVms", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVms.
type GetVmsArgs struct {
	Host *string `pulumi:"host"`
	// The ID of the pool the VM belongs to.
	PoolId string `pulumi:"poolId"`
	// The power state of the vms. (Running, Halted)
	PowerState *string `pulumi:"powerState"`
}

// A collection of values returned by getVms.
type GetVmsResult struct {
	Host *string `pulumi:"host"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of the pool the VM belongs to.
	PoolId string `pulumi:"poolId"`
	// The power state of the vms. (Running, Halted)
	PowerState *string `pulumi:"powerState"`
	// A list of information for all vms found in this pool.
	Vms []GetVmsVm `pulumi:"vms"`
}

func GetVmsOutput(ctx *pulumi.Context, args GetVmsOutputArgs, opts ...pulumi.InvokeOption) GetVmsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVmsResultOutput, error) {
			args := v.(GetVmsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("xenorchestra:index/getVms:getVms", args, GetVmsResultOutput{}, options).(GetVmsResultOutput), nil
		}).(GetVmsResultOutput)
}

// A collection of arguments for invoking getVms.
type GetVmsOutputArgs struct {
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The ID of the pool the VM belongs to.
	PoolId pulumi.StringInput `pulumi:"poolId"`
	// The power state of the vms. (Running, Halted)
	PowerState pulumi.StringPtrInput `pulumi:"powerState"`
}

func (GetVmsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsArgs)(nil)).Elem()
}

// A collection of values returned by getVms.
type GetVmsResultOutput struct{ *pulumi.OutputState }

func (GetVmsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmsResult)(nil)).Elem()
}

func (o GetVmsResultOutput) ToGetVmsResultOutput() GetVmsResultOutput {
	return o
}

func (o GetVmsResultOutput) ToGetVmsResultOutputWithContext(ctx context.Context) GetVmsResultOutput {
	return o
}

func (o GetVmsResultOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVmsResult) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVmsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the pool the VM belongs to.
func (o GetVmsResultOutput) PoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmsResult) string { return v.PoolId }).(pulumi.StringOutput)
}

// The power state of the vms. (Running, Halted)
func (o GetVmsResultOutput) PowerState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVmsResult) *string { return v.PowerState }).(pulumi.StringPtrOutput)
}

// A list of information for all vms found in this pool.
func (o GetVmsResultOutput) Vms() GetVmsVmArrayOutput {
	return o.ApplyT(func(v GetVmsResult) []GetVmsVm { return v.Vms }).(GetVmsVmArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVmsResultOutput{})
}
