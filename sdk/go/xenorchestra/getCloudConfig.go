// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package xenorchestra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/vatesfr/pulumi-xenorchestra/sdk/go/xenorchestra/internal"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/vatesfr/pulumi-xenorchestra/sdk/go/xenorchestra"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := xenorchestra.GetXoaCloudConfig(ctx, &xenorchestra.GetXoaCloudConfigArgs{
//				Name: "Name of cloud config",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: xenorchestra.index/getcloudconfig.getCloudConfig has been deprecated in favor of xenorchestra.index/getxoacloudconfig.getXoaCloudConfig
func LookupCloudConfig(ctx *pulumi.Context, args *LookupCloudConfigArgs, opts ...pulumi.InvokeOption) (*LookupCloudConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCloudConfigResult
	err := ctx.Invoke("xenorchestra:index/getCloudConfig:getCloudConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudConfig.
type LookupCloudConfigArgs struct {
	// The name of the cloud config you want to look up.
	Name string `pulumi:"name"`
}

// A collection of values returned by getCloudConfig.
type LookupCloudConfigResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the cloud config you want to look up.
	Name string `pulumi:"name"`
	// The contents of the cloud-config.
	Template string `pulumi:"template"`
}

func LookupCloudConfigOutput(ctx *pulumi.Context, args LookupCloudConfigOutputArgs, opts ...pulumi.InvokeOption) LookupCloudConfigResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCloudConfigResultOutput, error) {
			args := v.(LookupCloudConfigArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("xenorchestra:index/getCloudConfig:getCloudConfig", args, LookupCloudConfigResultOutput{}, options).(LookupCloudConfigResultOutput), nil
		}).(LookupCloudConfigResultOutput)
}

// A collection of arguments for invoking getCloudConfig.
type LookupCloudConfigOutputArgs struct {
	// The name of the cloud config you want to look up.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupCloudConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudConfigArgs)(nil)).Elem()
}

// A collection of values returned by getCloudConfig.
type LookupCloudConfigResultOutput struct{ *pulumi.OutputState }

func (LookupCloudConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudConfigResult)(nil)).Elem()
}

func (o LookupCloudConfigResultOutput) ToLookupCloudConfigResultOutput() LookupCloudConfigResultOutput {
	return o
}

func (o LookupCloudConfigResultOutput) ToLookupCloudConfigResultOutputWithContext(ctx context.Context) LookupCloudConfigResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCloudConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the cloud config you want to look up.
func (o LookupCloudConfigResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudConfigResult) string { return v.Name }).(pulumi.StringOutput)
}

// The contents of the cloud-config.
func (o LookupCloudConfigResultOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudConfigResult) string { return v.Template }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudConfigResultOutput{})
}
